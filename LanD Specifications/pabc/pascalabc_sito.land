OPENING_PSEUDOCOMMENT	:	'//{' ~[\n\r]*
CLOSING_PSEUDOCOMMENT	:	'//}' ~[\n\r]*

COMMENT		: COMMENT_L|COMMENT_ML
COMMENT_L	: '//' ~[\n\r]*
COMMENT_ML	: '/*' .*? '*/'
STRING_SKIP	: '\\\'' | '\\\\'
STRING	: '\'' (STRING_SKIP|.)*? '\''
KEYWORD: 'for'|'case'
ID		: '&'?[_a-zA-Z][_0-9a-zA-Z]*

program	=	Any declarations block '.'

declarations		=	(const|var|procedure)*
const				=	'const' const_atom+
const_atom			=	ID '=' Any ';'
var					=	'var' var_atom+
var_atom			=	(ID (',' ID)* (':' Any)? (':=' Any)? ';')
procedure			=	'procedure' %priority(2) name %priority(2) arguments? ';' block ';'
arguments			=	'(' (arguments_element (';' arguments_element)*)? ')'
arguments_element	=	('var'|'const')? ID (',' ID)* ':' Any

pseudo_block	=	OPENING_PSEUDOCOMMENT operator (';' operator)*	CLOSING_PSEUDOCOMMENT
block			=	'begin' operator (';' operator)* 'end'
operator		=	assign_or_call|if|case|block|pseudo_block|Any
assign_or_call	=	name ('(' Any ')')? ((':='|'+='|'-='|'*=') Any)?
if				=	'if' Any 'then' operator ('else' operator)?!
case			=	'case' Any 'of' case_option+ 'end'
case_option		=	(Any (',' Any)* ':'|'else') operator ';'

name_atom	=	ID | '(' names_list ')'
name		=	name_atom (('.' name_atom) | ('<' names_list '>' | '[' Any ']'))*
names_list	=	name (',' name)*

%%

%parsing backtracking
%parsing start program
%parsing ignorecase
%parsing skip COMMENT

%nodes ghost operator
%nodes leaf name

%mapping land assign_or_call if case case_option pseudo_block var var_atom const const_atom procedure
DIRECTIVE	: '#' ~[\n\r]*
DIRECTIVE_ELSE	: '#else' (DIRECTIVE_ELSE|.)*? '#endif'
COMMENT		: COMMENT_L|COMMENT_ML
COMMENT_L	: '//' ~[\n\r]*
COMMENT_ML	: '/*' .*? '*/'
STRING		: STRING_STD|STRING_ESC
STRING_SKIP	: '\\"' | '\\\\'
STRING_STD	: '"' (STRING_SKIP|.)*? '"'
STRING_ESC	: '@'('"' ~["]* '"')+
CHAR		: '\'' ('\\\''|'\\\\'|.)*? '\''
ID			: '@'?[_a-zA-Z][_0-9a-zA-Z]*
 
program				=	Any namespace
namespace			=	'namespace' name '{' class_enum* '}'
class_enum			=	modifiers? class_enum_tail
modifiers			=	%ghost name
class_enum_tail		=	('class'|'struct'|'interface') name Any block ';'?
					|	'enum' name Any block ';'?
name				=	ID name_tail_element*
name_tail_element	=	ID|'.'|'?'|'<' name_tail_element* '>'|'[' Any ']'|','|'::'
block				=	'{' block_content '}'
block_content		=	(Any|block)*

%%

%parsing start program
%parsing skip COMMENT STRING DIRECTIVE DIRECTIVE_ELSE

%nodes ghost class_enum_tail name_tail_element
%nodes leaf name

%mapping land namespace class_enum
%mapping priority(5) name

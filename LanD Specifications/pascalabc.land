COMMENT		: COMMENT_L|COMMENT_ML
COMMENT_L	: '//' ~[\n\r]*
COMMENT_ML	: '/*' .*? '*/'
STRING_SKIP	: '\\\'' | '\\\\'
STRING	: '\'' (STRING_SKIP|.)*? '\''
ID		: '&'?[_a-zA-Z][_0-9a-zA-Z]*

program	=	header? uses? declarations block '.'
header	=	('program'|'unit') ID ';'
uses 	= 	'Uses' ID (',' ID)* ';'
declarations	=	(const|var|procedure|type)*
type	=	'type' ID '=' Any ';'
const	=	'const' (ID '=' Any ';')+
var		=	'var' (ID (',' ID)* (':' Any)? (':=' Any)? ';')+
procedure	=	'procedure' name ('(' (ID (',' ID)* ':' Any)? ')')? ';' block ';'
block	=	'begin' operator (';' operator)* 'end'
operator	=	assign_or_call|for|if|case|block|
assign_or_call	=	'var'? call (':' Any)? ((':='|'+='|'-='|'*=') Any)?
for		=	'for' Any 'to' Any 'do' operator
if		=	'if' Any 'then' operator ('else' operator)?!
call	=	name ('(' Any ')')?
case	=	'case' Any 'of' option+ 'end'
option	=	(Any ':'|'else') operator ';'

name				=	(ID|'('Any')') name_tail_element*
name_tail_element	=	ID|'.'|'[' Any ']'

%%

%start program
%skip COMMENT
%ghost operator
//%ignorecase
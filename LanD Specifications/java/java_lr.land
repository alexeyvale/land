DIRECTIVE	: '#' ~[\n\r]*

COMMENT		: COMMENT_L|COMMENT_ML
COMMENT_L	: '//' ~[\n\r]*
COMMENT_ML	: '/*' .*? '*/'

STRING		: STRING_STD
STRING_STD	: '"' ('\\"'|'\\\\'|.)*? '"'
STRING_INT_CODE : '{' (STRING|CHAR|STRING_INT_CODE|.)*? '}'

CHAR		: '\'' ('\\\''|'\\\\'|.)*? '\''
MODIFIER	: 'transient'|'strictfp'|'native'|'public'|'private'|'protected'|'static'|'const'|'new'|'final'|'synchronized'|'abstract'|'volatile'|'default'
ID			: [_$a-zA-Z][_$0-9a-zA-Z]*

ANY_TRIGGER_TOKEN	: '@interface'
 
CURVE_BRACKETED : %left '{' %right '}'
ROUND_BRACKETED : %left '(' %right ')'
SQUARE_BRACKETED : %left '[' %right ']'

 
file_content	=	outer_entity*

outer_entity	=	enum | class_interface | water_entity
inner_entity	=	enum | class_interface | method | field | water_entity

enum			=	common_beginning 'enum' name Any block ';'?
class_interface	=	common_beginning ('class'|'interface') name Any '{' inner_entity* '}' ';'?
method			=	common_beginning type_parameter? type name arguments Any (';' | block)	
field			=	common_beginning type_parameter? type name ('['']')* init_value? (',' name ('['']')* init_value?)* ';'
water_entity	=	Any (block | ';')+

common_beginning	=	(annotation|MODIFIER)*
init_value			=	'=' (Any | %ghost type | round_bracketed_water | block)+

name_atom	=	(ID | MODIFIER) type_parameter?
name		=	name_atom (('.'|'::') name_atom)*
names_list	=	name (',' name)*

type_atom	=	('unsigned'? ID) type_parameter? '*'*
type		=	type_atom ((('.'|'::') type_atom) | '['']')*!

type_parameter		=	'<' type_parameter_list? '>'
type_parameter_elem	=	('?' | name) (Any | name)+	
type_parameter_list	=	type_parameter_elem (',' type_parameter_elem)*

arguments	=	'(' (Any|arguments)+ ')'
annotation	=	'@' name Any
block		=	'{' (Any|block)+ '}'

round_bracketed_water	=	'(' (Any|round_bracketed_water)+ ')'

%%

%parsing {
	recovery
	fragment STRING_INT_CODE
	start file_content
	skip COMMENT STRING DIRECTIVE
}

%nodes {
	ghost names_list common_beginning outer_entity inner_entity
	leaf name type
}

%mapping {
	land enum class_interface method field
	priority(3) name
}
 

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\DefaultLanguageInformation.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\DefaultLanguageInformation.cs
*
[1039]	return scope.Name+template_str;
[1098]	return scope.Name + template_str;	0,98	[1,00, 0,89, False]
[1037]	if (scope.Name.StartsWith("$"))
[1094]	if (scope.Name.StartsWith("$"))	0,96	[1,00, 0,78, False]
[600]	{
[642]	{	0,99	[1,00, 0,99, True]
[773]	doc = doc.Replace("<params>", "");
[815]	doc = doc.Replace("<params>", "");	1,00	[1,00, 1,00, True]
[1596]	if (t.IsArray)
[1666]	if (t.IsArray)	1,00	[1,00, 0,99, False]
[1623]	StringBuilder sb = new StringBuilder();
[1693]	StringBuilder sb = new StringBuilder();	1,00	[1,00, 0,98, False]
[120]	keywords.Add("goto", "goto"); keys.Add("goto");
[121]	keywords.Add("goto", "goto"); keys.Add("goto");	0,99	[1,00, 0,96, False]
[103]	keywords.Add("continue", "continue"); keys.Add("continue");
[104]	keywords.Add("continue", "continue"); keys.Add("continue");	0,99	[1,00, 0,97, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\PatternsDesugaringVisitor.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\PatternsDesugaringVisitor.cs
*
[323]	// удаляем else из if
[937]	// удаляем else из if	0,86	[1,00, 0,30, False]
[292]	// Добавляем, чтобы на конвертировать еще раз, если потребуется
[882]	// Добавляем, чтобы на конвертировать еще раз, если потребуется	0,86	[1,00, 0,30, False]
[48]	result.Add(CastVariableDefinition);
[48]	result.Add(CastVariableDefinition);	1,00	[1,00, 1,00, False]
[47]	var result = new List<statement>();
[47]	var result = new List<statement>();	1,00	[1,00, 1,00, False]
[193]	var patternLocation = GetLocation(isPatternExpr);
[641]	var patternLocation = GetLocation(isPatternExpr);	0,93	[1,00, 0,65, False]
[202]	}
[647]	}	0,84	[1,00, 0,80, True]
[118]	DesugarIsExpression(isPatternExpr);
[217]	DesugarIsExpression(isPatternExpr);	0,98	[1,00, 0,88, False]
[114]	// TODO Patterns: convert to compilation error
[211]	{	0,72	[0,00, 0,90, True]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\syntax_tree_visitor.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\syntax_tree_visitor.cs
*
[2682]	if ((context.converting_block() == block_type.function_block ||
[2754]	if ((context.converting_block() == block_type.function_block ||	0,96	[1,00, 0,80, False]
[2675]	}
[2725]	}	0,80	[1,00, 0,75, True]
[12201]	ExecuteCommonChecks(deconstructor);
[12843]	ExecuteCommonChecks(deconstructor);	0,97	[1,00, 0,96, True]
[12212]	AddError(get_location(_procedure_definition), "INSTANCE_DECONSTRUCTORS_CANNOT_BE_GENERIC");
[12854]	AddError(get_location(_procedure_definition), "INSTANCE_DECONSTRUCTORS_CANNOT_BE_GENERIC");	0,99	[1,00, 0,96, False]
[13263]	AddError(get_location(type), "STRUCT_TYPE_DEFINITION_IN_FORMAL_PARAM");
[13995]	AddError(get_location(type), "STRUCT_TYPE_DEFINITION_IN_FORMAL_PARAM");	0,96	[1,00, 0,80, False]
[13265]	if (context.top_function is common_method_node && (context.converted_type.IsInterface || context.top_function.polymorphic_state == SemanticTree.polymorphic_state.ps_virtual_abstract )
[14012]	if (context.top_function is common_method_node && (context.converted_type.IsInterface || context.top_function.polymorphic_state == SemanticTree.polymorphic_state.ps_virtual_abstract )	0,98	[1,00, 0,88, False]
[8277]	SymbolTable.WithScope WithScope = new SymbolTable.WithScope(SymbolTable, context.CurrentScope, null);
[8678]	SymbolTable.WithScope WithScope = new SymbolTable.WithScope(SymbolTable, context.CurrentScope, null);	1,00	[1,00, 0,99, False]
[8319]	else
[8721]	else	0,98	[1,00, 0,97, True]
[11297]	if (_type_declaration.attributes != null)
[11802]	if (_type_declaration.attributes != null)	0,57	[1,00, 0,46, True]
[11172]	for (int k = 0; k < cl_def.template_args.idents.Count; k++)
[11712]	for (int k = 0; k < cl_def.template_args.idents.Count; k++)	0,98	[1,00, 0,88, False]
[3909]	//pal.proc_attributes.Add(new PascalABCCompiler.SyntaxTree.procedure_attribute(SyntaxTree.proc_attribute.attr_overload)); attr_overload - убрал отовсюду! ССМ
[4115]	//pal.proc_attributes.Add(new PascalABCCompiler.SyntaxTree.procedure_attribute(SyntaxTree.proc_attribute.attr_overload)); attr_overload - убрал отовсюду! ССМ	1,00	[1,00, 0,98, False]
[3893]	//невозможно сгенерировать конструктор по умолчанию.
[4099]	//невозможно сгенерировать конструктор по умолчанию.	0,98	[1,00, 0,90, False]
[12492]	WarningsList.Add(new OverrideOrReintroduceExpected(loc));
[13145]	WarningsList.Add(new OverrideOrReintroduceExpected(loc));	0,94	[1,00, 0,71, False]
[12488]	common_method_node cmn = context.top_function as common_method_node;
[13139]	common_method_node cmn = context.top_function as common_method_node;	0,97	[1,00, 0,87, False]
[17156]	bool current_type_section_converting = type_section_converting;
[18143]	bool current_type_section_converting = type_section_converting;	1,00	[1,00, 1,00, False]
[17218]	synonym_value, ctn, PascalABCCompiler.SemanticTree.polymorphic_state.ps_static,
[18205]	synonym_value, ctn, PascalABCCompiler.SemanticTree.polymorphic_state.ps_static,	1,00	[1,00, 0,99, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\NETGenerator.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\NETGenerator.cs
*
[5285]	}
[5536]	}	0,95	[1,00, 0,94, True]
[5278]	il.Emit(OpCodes.Ldloc, lb);
[5528]	//il.Emit(OpCodes.Ldloc, lb);	0,97	[0,93, 0,98, True]
[7836]	}
[8154]	}	0,95	[1,00, 0,94, True]
[7856]	}
[8174]	}	0,90	[1,00, 0,87, True]
[4735]	CreateArrayForClassField((cur_ti.init_meth as MethodBuilder).GetILGenerator(), fb, ti, value.inital_value as IArrayInitializer, value.type);
[4971]	CreateArrayForClassField((cur_ti.init_meth as MethodBuilder).GetILGenerator(), fb, ti, value.inital_value as IArrayInitializer, value.type);	0,99	[1,00, 0,98, True]
[4732]	if (value.inital_value == null || value.inital_value is IArrayConstantNode)
[4968]	if (value.inital_value == null || value.inital_value is IArrayConstantNode)	1,00	[1,00, 0,99, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\DomSyntaxTreeVisitor.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\DomSyntaxTreeVisitor.cs
*
[1933]	_unit_module.compiler_directives = new List<PascalABCCompiler.SyntaxTree.compiler_directive>();
[2251]	_unit_module.compiler_directives = new List<PascalABCCompiler.SyntaxTree.compiler_directive>();	0,95	[1,00, 0,73, False]
[1983]	doc = new document(_unit_module.file_name);
[2314]	doc = new document(_unit_module.file_name);	0,95	[1,00, 0,75, False]
[637]	else returned_scope = null;
[695]	else returned_scope = null;	0,93	[1,00, 0,65, False]
[633]	//throw new Exception("The method or operation is not implemented.");
[688]	//throw new Exception("The method or operation is not implemented.");	0,95	[1,00, 0,77, False]
[784]	{
[953]	{	0,92	[1,00, 0,90, True]
[790]	{
[959]	{	0,95	[1,00, 0,94, True]
[3906]	}
[4461]	}	0,95	[1,00, 0,94, True]
[3800]	{
[4341]	{	0,94	[1,00, 0,93, True]
[3313]	//throw new Exception("The method or operation is not implemented.");
[3848]	//throw new Exception("The method or operation is not implemented.");	0,97	[1,00, 0,84, False]
[3315]	returned_scope = new SetScope(returned_scope as TypeScope);
[3850]	TypeScope ts = returned_scope as TypeScope;	0,72	[0,65, 0,74, True]
[4006]	{
[4561]	{	0,99	[1,00, 0,99, True]
[3962]	{
[4517]	{	0,99	[1,00, 0,99, True]
[2888]	if (_method_call.parameters != null && ps != null)
[3333]	if (_method_call.parameters != null && ps != null)	0,99	[1,00, 0,94, False]
[2896]	awaitedProcType = ps.parameters[i + (ps.IsExtension ? 1 : 0)].sc as TypeScope;
[3341]	awaitedProcType = ps.parameters[i + (ps.IsExtension ? 1 : 0)].sc as TypeScope;	0,97	[1,00, 0,83, False]
[1853]	}
[2151]	}	0,98	[1,00, 0,97, True]
[1850]	#if DEBUG
[2148]	#if DEBUG	1,00	[1,00, 0,99, False]
[119]	return true;
[120]	return true;	0,87	[1,00, 0,84, True]
[133]	else if (node is tuple_node)
[144]	else if (node is tuple_node)	0,93	[1,00, 0,64, False]
[411]	returned_scope = new ProcType(ps);
[455]	returned_scope = new ProcType(ps);	0,99	[1,00, 0,94, False]
[415]	returned_scopes = cur_scope.FindOverloadNames(_ident.name);
[459]	returned_scopes = cur_scope.FindOverloadNames(_ident.name);	0,95	[1,00, 0,93, True]
[2546]	else if (returned_scope is TypeScope)
[2938]	else if (returned_scope is TypeScope)	0,98	[1,00, 0,90, False]
[2519]	if (ts != null)
[2906]	if (ts != null)	0,93	[1,00, 0,92, True]
[1241]	cur_scope = ps;
[1451]	cur_scope = ps;	0,98	[1,00, 0,92, False]
[1198]	if (_procedure_header.template_args != null && !ps.IsGeneric())
[1393]	if (_procedure_header.template_args != null && !ps.IsGeneric())	0,97	[1,00, 0,86, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\ViewOptionsContent.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\ViewOptionsContent.cs
*
[119]	MainForm.PlayPauseButtonsVisibleInPanel = cbShowDebugPlayPauseButtons.Checked;
[101]	MainForm.PlayPauseButtonsVisibleInPanel = cbShowDebugPlayPauseButtons.Checked;	0,97	[1,00, 0,87, False]
[85]	}
[85]	}	0,83	[1,00, 0,79, True]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\Tree.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\Tree.cs
*
[15752]	accessor_name?.FillParentsInAllChilds();
[15806]	accessor_name?.FillParentsInAllChilds();	0,90	[1,00, 0,50, False]
[15751]	FillParentsInDirectChilds();
[15805]	FillParentsInDirectChilds();	0,95	[1,00, 0,77, False]
[15900]	FillParentsInDirectChilds();
[16020]	FillParentsInDirectChilds();	0,95	[1,00, 0,76, False]
[15901]	accessor_name?.FillParentsInAllChilds();
[16021]	accessor_name?.FillParentsInAllChilds();	0,90	[1,00, 0,50, False]
[40638]	proc_body?.FillParentsInAllChilds();
[40851]	proc_body?.FillParentsInAllChilds();	0,99	[1,00, 0,93, False]
[40635]	ident_list?.FillParentsInAllChilds();
[40848]	ident_list?.FillParentsInAllChilds();	0,99	[1,00, 0,96, False]
[49554]	return copy;
[49942]	return copy;	0,99	[1,00, 0,93, False]
[49550]	pattern_deconstructor_parameter copy = new pattern_deconstructor_parameter();
[49938]	pattern_parameter copy = new pattern_parameter();	0,92	[0,62, 1,00, True]
[15744]	if (accessor_name != null)
[15794]	if (accessor_name != null)	0,90	[1,00, 0,50, False]
[15745]	accessor_name.Parent = this;
[15795]	accessor_name.Parent = this;	0,90	[1,00, 0,50, False]
[15876]	if (accessor_name != null)
[15982]	if (accessor_name != null)	0,90	[1,00, 0,50, False]
[15880]	}
[15996]	}	0,79	[1,00, 0,74, True]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\AssignTuplesDesugarVisitor.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\AssignTuplesDesugarVisitor.cs
*
[32]	
[37]		0,98	[1,00, 0,97, True]
[38]	for (var i = 0; i < n; i++)
[43]	for (var i = 0; i < n; i++)	0,98	[1,00, 0,92, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\SymTable.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\SymTable.cs
*
[4161]	}*/
[4624]	}*/	0,99	[1,00, 0,94, False]
[4174]	lst.AddRange(topScope.GetNames());*/
[4637]	lst.AddRange(topScope.GetNames());*/	0,99	[1,00, 0,96, False]
[3240]	{
[3657]	{	0,98	[1,00, 0,98, True]
[3234]	if (ts is TypeSynonim) return this.IsConvertable((ts as TypeSynonim).actType);
[3651]	if (ts is TypeSynonim) return this.IsConvertable((ts as TypeSynonim).actType);	0,99	[1,00, 0,95, False]
[708]	{
[721]	{	0,93	[1,00, 0,91, True]
[704]	List<SymInfo> lst = new List<SymInfo>();
[717]	List<SymInfo> lst = new List<SymInfo>();	0,99	[1,00, 0,94, False]
[1738]	//SortedDictionary<string,SymInfo> dict = new SortedDictionary<string,SymInfo>();
[2017]	List<SymInfo> lst = new List<SymInfo>();	0,48	[0,39, 0,50, True]
[1739]	return null;
[2022]	return lst.ToArray();	0,47	[0,35, 0,50, True]
[5987]	si2 = new CompiledFieldScope(si2, mi as FieldInfo, this).si;
[6547]	si2 = new CompiledFieldScope(si2, mi as FieldInfo, this).si;	0,99	[1,00, 0,98, True]
[5941]	}
[6501]	}	0,99	[1,00, 0,98, True]
[1782]	if (topScope != null) return topScope.FindNameInAnyOrder(name);
[2072]	return parent.FindNameInAnyOrder(name);	0,51	[0,57, 0,50, True]
[1783]	return null;
[2072]	return parent.FindNameInAnyOrder(name);	0,57	[0,00, 0,71, True]
[1764]	//SortedDictionary<string,SymInfo> dict = new SortedDictionary<string,SymInfo>();
[2047]	List<SymInfo> lst = new List<SymInfo>();	0,48	[0,39, 0,50, True]
[1765]	return new SymInfo[0];
[2052]	return lst.ToArray();	0,47	[0,35, 0,50, True]
[2002]	foreach (ElementScope parameter in this.parameters)
[2310]	foreach (ElementScope parameter in this.parameters)	0,59	[1,00, 0,48, True]
[2006]	{
[2311]	{	0,66	[1,00, 0,58, True]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\LocalVars.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\LocalVars.cs
*
[1167]	{
[1167]	{	0,92	[1,00, 0,90, True]
[1176]	list.Add(new ValueItem(v as NamedValue, this.DebugType));
[1178]	list.Add(new ValueItem(v as NamedValue, this.DebugType));	0,92	[1,00, 0,90, True]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\CodeFormatter.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\CodeFormatter.cs
*
[525]	}
[680]	}	0,71	[1,00, 0,64, True]
[519]	if (sn is program_module || sn is unit_module)
[662]	if (sn is program_module || sn is unit_module)	0,89	[1,00, 0,43, False]
[2444]	for (int i = 0; i < _template_param_list.params_list.Count; i++)
[2662]	for (int i = 0; i < _template_param_list.params_list.Count; i++)	0,93	[1,00, 0,67, False]
[2449]	}
[2668]	}	0,76	[1,00, 0,70, True]
[231]	sb.Append(Text.Substring(start_pos, end_pos - start_pos + 1));
[270]	string node_text = Text.Substring(start_pos, Math.Max(end_pos - start_pos + 1, 0));	0,61	[0,66, 0,42, False]
[232]	}
[274]	}	0,87	[1,00, 0,84, True]
[2970]	if (_is_pattern_expr.left != null)
[3200]	if (_is_pattern_expr.left != null)	0,95	[1,00, 0,74, False]
[2976]	visit_node(_is_pattern_expr.right);
[3210]	visit_node(_is_pattern_expr.right);	0,97	[1,00, 0,86, False]
[2587]	{
[2806]	{	0,77	[1,00, 0,71, True]
[2585]	visit_node(_enumerator.name);
[2804]	visit_node(_enumerator.name);	0,90	[1,00, 0,50, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\SymbolTable.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\SymbolTable.cs
*
[956]	return;
[994]	return;	0,87	[1,00, 0,84, True]
[955]	if (Result.Count > add && StopIfFind)
[993]	if (Result.Count > add && StopIfFind)	0,90	[1,00, 0,88, True]
[831]	scope = ((ClassMethodScope)scope).MyClass;
[862]	scope = scope.TopScope;	0,88	[0,40, 1,00, True]
[832]	else
[863]	else	0,97	[1,00, 0,86, False]
[1091]	
[1169]		0,87	[1,00, 0,84, True]
[1009]	//мы в ImplementationPart?
[1079]	//мы в ImplementationPart?	0,94	[1,00, 0,70, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\SyntaxTreeStreamReader.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\SyntaxTreeStreamReader.cs
*
[1639]	read_syntax_tree_node(_write_accessor_name);
[1677]	read_syntax_tree_node(_write_accessor_name);	0,93	[1,00, 0,65, False]
[1640]	_write_accessor_name.accessor_name = _read_node() as ident;
[1678]	_write_accessor_name.accessor_name = _read_node() as ident;	0,90	[1,00, 0,50, False]
[27]	case 2:
[27]	case 2:	1,00	[1,00, 0,98, False]
[349]	case 163:
[349]	case 163:	0,98	[1,00, 0,92, False]
[4049]	else
[4101]	{	0,39	[0,00, 0,49, True]
[4058]	_deconstructor_pattern.type = _read_node() as type_definition;
[4103]	_deconstructor_pattern.type = _read_node() as type_definition;	0,85	[1,00, 0,25, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\ExpressionVisitor.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\ExpressionVisitor.cs
*
[332]	if (ts != null)
[389]	//if (ts != null)	0,88	[0,86, 0,98, False]
[312]	{
[371]	{	0,97	[1,00, 0,96, True]
[111]	TypeScope return_type = ps.return_type;
[122]	TypeScope return_type = ps.return_type;	0,99	[1,00, 0,99, True]
[114]	if (return_type == null)
[125]	if (return_type == null)	1,00	[1,00, 0,99, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\Compiler.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\Compiler.cs
*
[3078]	if ((CurrentUnit = ReadDLL(UnitName)) != null)
[3182]	if ((CurrentUnit = ReadDLL(UnitName)) != null)	0,96	[1,00, 0,80, False]
[3377]	if (!UnitsSortedList.Contains(CurrentUnit))//vnimanie zdes inogda pri silnoj zavisimosti modulej moduli popadajut neskolko raz
[3508]	if (!UnitsSortedList.Contains(CurrentUnit))//vnimanie zdes inogda pri silnoj zavisimosti modulej moduli popadajut neskolko raz	0,97	[1,00, 0,96, True]
[2457]	// Если есть в кеше, то пользуемся кешем
[2535]	// Если есть в кеше, то пользуемся кешем	0,98	[1,00, 0,88, False]
[2464]	if (Path.GetDirectoryName(UnitName) != string.Empty)
[2543]	if (Path.GetDirectoryName(UnitName) != string.Empty)	0,96	[1,00, 0,80, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\CompilerInformation.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\CompilerInformation.cs
*
[235]	CodeCompletion.CodeCompletionTester.TestIntellisense(Path.Combine(@"c:\Work\Miks\_PABCNETGitHub\TestSuite", "intellisense_tests"));
[236]	CodeCompletion.CodeCompletionTester.TestIntellisense(Path.Combine(@"c:\Work\Miks\_PABCNETGitHub\TestSuite", "intellisense_tests"));	0,90	[1,00, 0,50, False]
[234]	CodeCompletion.CodeCompletionTester.Test();
[234]	CodeCompletion.CodeCompletionTester.Test();	0,98	[1,00, 0,92, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\Optimizer.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\Optimizer.cs
*
[552]	{
[563]	{	0,98	[1,00, 0,97, True]
[571]	foreach (local_block_variable vdn in stmt.local_variables)
[585]	foreach (local_block_variable vdn in stmt.local_variables)	0,98	[1,00, 0,88, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\SideTab.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\SideTab.cs
*
[306]	
[329]		0,93	[1,00, 0,91, True]
[304]	
[327]		0,94	[1,00, 0,93, True]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\CapturedVariablesTreeBuilder.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\CapturedVariablesTreeBuilder.cs
*
[162]	si.sym_info.semantic_node_type == semantic_node_type.basic_function_node && idName == "exit")
[198]	si.sym_info.semantic_node_type == semantic_node_type.ref_type_node ||	0,66	[0,67, 0,66, True]
[177]	return;
[204]	return;	0,67	[1,00, 0,59, True]
[126]	{
[127]	{	0,49	[1,00, 0,36, True]
[128]	}
[134]	}	0,74	[1,00, 0,68, True]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\DomConverter.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\DomConverter.cs
*
[292]	if (ts.topScope is InterfaceUnitScope)
[311]	if (ts.topScope is InterfaceUnitScope)	0,95	[1,00, 0,94, True]
[307]	{
[326]	{	0,96	[1,00, 0,95, True]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\convertion_data_and_alghoritms.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\convertion_data_and_alghoritms.cs
*
[436]	switch (fn.semantic_node_type)
[436]	switch (fn.semantic_node_type)	0,96	[1,00, 0,95, True]
[426]	case semantic_node_type.compiled_function_node:
[426]	case semantic_node_type.compiled_function_node:	0,93	[1,00, 0,92, True]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\compilation_context.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\compilation_context.cs
*
[2498]	if (CurrentHandlerList.Contains(name.ToLower()))
[2512]	if (CurrentHandlerList.Contains(name.ToLower()))	0,95	[1,00, 0,76, False]
[2501]	//TODO: Можно передавать список всех повторных объявлений.
[2515]	//TODO: Можно передавать список всех повторных объявлений.	0,90	[1,00, 0,50, False]
[1050]	_ctn.methods.AddElement(cmn);
[1052]	_ctn.methods.AddElement(cmn);	1,00	[1,00, 0,98, False]
[1035]	{
[1037]	{	0,98	[1,00, 0,97, True]
[1267]	//string cname = compiler_string_consts.GetConnectedFunctionName(_compiled_tn.name, name);
[1277]	//string cname = compiler_string_consts.GetConnectedFunctionName(_compiled_tn.name, name);	1,00	[1,00, 0,98, False]
[1245]	_ctn.Scope.AddSymbol(name, _last_created_function);
[1255]	_ctn.Scope.AddSymbol(name, _last_created_function);	0,97	[1,00, 0,97, True]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\CodeCompletionHighlighter.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\CodeCompletionHighlighter.cs
*
[232]	if (string.Compare(word, "class", true) != 0 || !isClassMember(end_off, textArea))
[395]	if (string.Compare(word, "class", true) != 0 || !isClassMember(end_off, textArea))	0,94	[1,00, 0,71, False]
[241]	return new TmpPos(end_off - 3, word.Length);
[404]	return new TmpPos(end_off - 3, word.Length);	0,92	[1,00, 0,62, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\MarkMethodHasYieldVisitor.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\MarkMethodHasYieldVisitor.cs
*
[75]	{
[104]	{	0,83	[1,00, 0,79, True]
[85]	
[131]		0,85	[1,00, 0,82, True]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\TreeHelper.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\TreeHelper.cs
*
[1768]	result[i] = new var_statement(variables.definitions[i]);
[1827]	result[i] = new var_statement(variables.definitions[i]);	1,00	[1,00, 1,00, False]
[1763]	Debug.Assert(types.Length == variables.definitions.Count, "Inconsistent types count");
[1822]	Debug.Assert(types.Length == variables.definitions.Count, "Inconsistent types count");	1,00	[1,00, 1,00, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\Assign.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\Assign.cs
*
[227]	var cfr = to as class_field_reference;
[255]	var cfr = to as class_field_reference;	0,86	[1,00, 0,83, True]
[219]	var b = FindIEnumerableElementType(from.type, ref elem_type, out bb);
[247]	var b = FindIEnumerableElementType(from.type, ref elem_type, out bb);	0,95	[1,00, 0,74, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\Helpers.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\Helpers.cs
*
[834]	foreach (Type interf in generic_def.GetInterfaces())
[879]	foreach (Type interf in generic_def.GetInterfaces())	0,98	[1,00, 0,88, False]
[814]	Type generic_def = null;
[859]	Type generic_def = null;	0,94	[1,00, 0,69, False]
[981]	//(ssyy) Лучше использовать MakePointerType
[1044]	//(ssyy) Лучше использовать MakePointerType	1,00	[1,00, 1,00, False]
[933]	ti.def_cnstr = find_constructor_with_one_param(ti.tp);
[996]	ti.def_cnstr = find_constructor_with_one_param(ti.tp);	1,00	[1,00, 1,00, True]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\semantic_checks_for_sugar.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\semantic_checks_for_sugar.cs
*
[77]	IsSlicedType = 3;
[77]	IsSlicedType = 3;	0,93	[1,00, 0,65, False]
[61]	var IsSlicedType = 0; // проверим, является ли semvar.type динамическим массивом, списком List или строкой
[61]	var IsSlicedType = 0; // проверим, является ли semvar.type динамическим массивом, списком List или строкой	0,94	[1,00, 0,72, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\SyntaxTreeStreamWriter.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\SyntaxTreeStreamWriter.cs
*
[5473]	}
[5512]	}	0,96	[1,00, 0,95, True]
[5471]	bw.Write((byte)1);
[5510]	bw.Write((byte)1);	0,97	[1,00, 0,96, True]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\types.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\types.cs
*
[2973]	add_name(name, new SymbolInfo(cnfn));
[3089]	add_name(name, new SymbolInfo(cnfn));	1,00	[1,00, 1,00, False]
[2977]	cnfn, concrete_parameter_type.cpt_none, null, null);
[3093]	cnfn, concrete_parameter_type.cpt_none, null, null);	1,00	[1,00, 1,00, True]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\static_executors.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\static_executors.cs
*
[2489]	}
[2493]	}	0,96	[1,00, 0,95, True]
[2475]	{
[2475]	{	0,94	[1,00, 0,93, True]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\ProcessYieldsCapturedVars.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\ProcessYieldsCapturedVars.cs
*
[405]	return UpperTo<declarations>().list
[418]	cd = UpperTo<declarations>().list	0,82	[0,82, 0,81, False]
[391]	{
[404]	{	0,88	[1,00, 0,85, True]
[616]	pdCloned.proc_header.name.meth_name = new ident(YieldConsts.YieldHelperMethodPrefix + "_error_checkerr>" + pd.proc_header.name.meth_name.name,
[649]	pdCloned.proc_header.name.meth_name = new ident(YieldConsts.YieldHelperMethodPrefix + "_error_checkerr>" + pd.proc_header.name.meth_name.name,	0,96	[1,00, 0,82, False]
[618]	pd.proc_header.name.meth_name.source_context); // = new method_name("<yield_helper_locals_type_detector>" + pd.proc_header.className.meth_name.className);
[651]	pd.proc_header.name.meth_name.source_context); // = new method_name("<yield_helper_locals_type_detector>" + pd.proc_header.className.meth_name.className);	0,98	[1,00, 0,89, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\CapturedVariablesSubstitutor.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\CapturedVariablesSubstitutor.cs
*
[312]	if (forNode != null)
[322]	if (forNode != null)	0,97	[1,00, 0,84, False]
[332]	}
[347]	}	0,84	[1,00, 0,80, True]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\LambdaResultTypeInferrer.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\LambdaResultTypeInferrer.cs
*
[94]	}
[108]	}	0,60	[1,00, 0,50, True]
[84]	if (to != null &&
[98]	if (to != null &&	0,98	[1,00, 0,89, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\Foreach.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\Foreach.cs
*
[157]	var i = GenIdentName();
[211]	var i = GenIdentName();	0,96	[1,00, 0,81, False]
[145]	}
[202]	// SSM 23.08.16 Закомментировал оптимизацию. Не работает с лямбдами. Лямбды обходят старое дерево. А заменить foreach на for на этом этапе пока не получается - не развита инфраструктура	0,52	[0,00, 0,65, True]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\DefaultFormattingStrategy.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\DefaultFormattingStrategy.cs
*
[168]	break;
[168]	break;	0,99	[1,00, 0,93, False]
[176]	}
[176]	}	0,97	[1,00, 0,97, True]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\TextEditorControl.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\TextEditorControl.cs
*
[359]	//							curTabIndent    += TabIndent * primaryTextArea.TextArea.TextView.GetWidth(' ');
[359]	//							curTabIndent    += TabIndent * primaryTextArea.TextArea.TextView.GetWidth(' ');	0,99	[1,00, 0,95, False]
[356]	case TextWordType.Word:
[356]	case TextWordType.Word:	0,98	[1,00, 0,92, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\LambdaHelper.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\LambdaHelper.cs
*
[263]	int lambdaDefParamsCount = 0;
[280]	int lambdaDefParamsCount = 0;	0,99	[1,00, 0,94, False]
[253]	(delegate_internal_interface)leftType.get_internal_interface(internal_interface_kind.delegate_interface);
[270]	(delegate_internal_interface)leftType.get_internal_interface(internal_interface_kind.delegate_interface);	0,99	[1,00, 0,97, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\QuickClassBrowserPanel.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\QuickClassBrowserPanel.cs
*
[501]	}
[504]	}	0,97	[1,00, 0,96, True]
[509]	items.AddRange(vars);
[512]	items.AddRange(vars);	1,00	[1,00, 0,99, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\PCUReader.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\PCUReader.cs
*
[1419]	compiled_function_node orig = GetCompiledMethod(br.ReadInt32());
[1445]	compiled_function_node orig = GetCompiledMethod(br.ReadInt32());	0,90	[1,00, 0,50, False]
[1421]	return orig.get_instance(parameters, false, null);
[1448]	var instance = orig.get_instance(parameters, false, null);	0,72	[0,81, 0,38, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\HierarchyVisitor.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\HierarchyVisitor.cs
*
[3785]	DefaultVisit(_pattern_node);
[3941]	DefaultVisit(_pattern_node);	0,95	[1,00, 0,75, False]
[3787]	post_do_visit(_pattern_node);
[3945]	post_do_visit(_pattern_node);	0,98	[1,00, 0,88, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\CompilerOptionsContent.Designer.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\CompilerOptionsContent.Designer.cs
*
[49]	this.btSelectOutpotDirectory.Name = "btSelectOutpotDirectory";
[49]	this.btSelectOutpotDirectory.Name = "btSelectOutpotDirectory";	1,00	[1,00, 0,99, False]
[75]	//
[75]	//	0,98	[1,00, 0,98, True]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\Patterns.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\Patterns.cs
*
[197]	if (node.is_generic_parameter)
[207]	if (node.is_generic_parameter)	1,00	[1,00, 1,00, False]
[207]	yield break;
[217]	yield break;	1,00	[1,00, 1,00, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\Form1.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\Form1.cs
*
[394]	HelpExamplesFileName = PascalABCCompiler.Tools.ReplaceAllKeys(Constants.HelpExamplesFileName, WorkbenchStorage.StandartDirectories);
[404]	HelpExamplesFileName = PascalABCCompiler.Tools.ReplaceAllKeys(Constants.HelpExamplesFileName, WorkbenchStorage.StandartDirectories);	0,98	[1,00, 0,92, False]
[380]	WorkbenchServiceFactory.ProjectService.OpenProject(FileNameToWait);
[390]	WorkbenchServiceFactory.ProjectService.OpenProject(FileNameToWait);	0,96	[1,00, 0,82, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\Actions.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\Actions.cs
*
[38]	WorkbenchServiceFactory.DebuggerOperationsService.AddVariable(var, true);
[38]	WorkbenchServiceFactory.DebuggerOperationsService.AddVariable(var, true);	1,00	[1,00, 0,99, False]
[23]	//num_line = textArea.SelectionManager.SelectionStart.Line;
[23]	//num_line = textArea.SelectionManager.SelectionStart.Line;	0,99	[1,00, 0,97, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\Debugger.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\Debugger.cs
*
[1255]	else if (nv.Name.Contains("$class_var")) global_nv = nv;
[1305]	else if (nv.Name.Contains("$class_var")) global_nv = nv;	0,99	[1,00, 0,95, False]
[1239]	int pos = nv.Name.IndexOf(':');
[1289]	int pos = nv.Name.IndexOf(':');	0,97	[1,00, 0,87, False]

file:///D:\Repositories\_mapping\PascalABC\1462\Common\base\ProjectHelper.cs
file:///D:\Repositories\_mapping\PascalABC\1462\Common\modified\ProjectHelper.cs
*
[239]	currentProject = null;
[250]	currentProject = null;	0,96	[1,00, 0,80, False]
[240]	uid = 1;
[251]	uid = 1;	0,95	[1,00, 0,75, False]
